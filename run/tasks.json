[
    {"task": "Write a query that may be forwarded from Sydney1 to Perth1 with max 5 link failures.", "solution": "<.*> [.#Sydney1] .* [Perth1#.] <.*> 5", "other_solutions": [], "model": "Aarnet_Gen_1.json", "must_contain": ["<.*>", "5"], "must_contain_any": [["[.#Sydney1]", "[Sydney1#.]"], ["[.#Perth1]", "[Perth1#.]"]]},
    {"task": "Write a query that finds any path from V0 to V3 with 0 link failures.", "solution": "<.*> [.#V0] .* [V3#.] <.*> 0", "other_solutions": [], "model": "_DemoNet_.json", "must_contain": ["[.#V0]", "[V3#.]", "0"], "must_contain_any": [["[.#V0]", "[V0#.]"], ["[.#V3]", "[V3#.]"]]},
    {"task": "Write a query to check if there is a possible path out of router V3 if there is no link failure.", "solution": "<.*> [V3#.] .* <.*> 0", "other_solutions": [["<.*> [V3#.] <.*> 0", "<.*> [.#V3] [V3#.] .* <.*> 0", "<.*> [.#V3] [V3#.] <.*> 0", "<.*> [.#V3] .* [V3#.] <.*> 0", "<.*> [.#V3] [^V3#V3] <.*> 0", "<.*> [.#V3] [^V3#V3]+ <.*> 0", "<.*> [.#V3] .* [^V3#V3] <.*> 0", "<.*> [.#V3] .* [^V3#V3]+ <.*> 0"]], "model": "_DemoNet_.json", "must_contain": ["[V3#.]", "<.*>", "0"], "must_not_contain": []},
    {"task": "Write a query to check if a packet can traverse three or more hops.", "solution": "<.*> ...(.)* <.*> 0", "other_solutions": [], "model": "_DemoNet_.json", "must_contain": ["<.*>", "0"], "must_contain_any": [["...(.)*", "....*"]]},
    {"task": "Write a query to check if a packet with the start label 10 can traverse six or more hops.", "solution": "<10> ......(.)* <.*> 0", "other_solutions": [], "model": "_DemoNet_.json", "must_contain_any": [["......(.)*", ".......*"]], "must_contain": ["<10>", "0"]},
    {"task": "Write a query to check if there is any MPLS routing in the network, with at most one failed link that takes at least 3 links between routers V0 and V3.", "solution": "<.*> [.#V0] ...(.)* [V3#.] <.*> 1", "other_solutions": [], "model": "_DemoNet_.json", "must_contain": ["2"], "must_contain_any": [["[.#V0]", "[V0#.]"], ["[.#V3]", "[V3#.]"]]},
    {"task": "Write a query to find any routing path from V1 to V3 with at most 1 link failure.", "solution": "<.*> [.#V1] .* [V3#.] <.*> 1", "other_solutions": [], "model": "_DemoNet_.json", "must_contain": ["<.*>"], "must_contain_any": [["[.#V1]", "[V1#.]"], ["[.#V3]", "[V3#.]"]]},
    {"task": "Write a query to verify if a packet is forwarded from V2 to V4 via V3.", "solution": "<.*> [.#V2] .* [.#V3] .* [V4#.] <.*> 0", "other_solutions": [["<.*> [.#V2] .* [V3#.] .* [V4#.] <.*> 0"]], "model": "_DemoNet_.json", "must_contain": ["<.*>", ".*", "0"], "must_contain_any": [["[.#V2]", "[V2#.]"], ["[.#V3]", "[V3#.]"], ["[.#V4]", "[V4#.]"]]},
    {"task": "Write a query to verify if a packet with top label 20 can reach V3 without going through V1.", "solution": "<20 .*> [^.#V1]* [.#V3] <.*> 0", "other_solutions": [["<20 .*> [^.#V1]* [V3#.] <.*> 0", "<20 .+> [^.#V1]* [V3#.] <.*> 0", "<20 .*> [^.#V1]* [V3#.] <.*> 0"]], "model": "_DemoNet_.json", "must_contain": ["20", "0"], "must_not_contain": [".* [.#V1]"], "must_contain_any": [["[.#V3]", "[V3#.]"], ["[^.#V1]*", "[^V1#.]*"]]},
    {"task": "Write a query to check whether a packet can loop through router Brisbane1.", "solution": "<.*> [Brisbane1#.] .+ [.#Brisbane1] <.*> 0", "other_solutions": [["<.*> [Brisbane1#.] .+ [Brisbane1#.] <.*> 0", "<.*> [.#Brisbane1] [^Brisbane1#Brisbane1]+ [.#Brisbane1] <.*> 0"]], "model": "Aarnet_Gen_1.json", "must_contain": ["<.*>", "0"], "must_contain_any": [[".*", ".+"]]},
    {"task": "Write a query to check whether the label 3 can be used in Sydney1 to do a lookup.", "solution": "<3> [.#Sydney1] [Sydney1#.] <.*> 0", "other_solutions": [], "model": "Aarnet_Gen_1.json", "must_contain": ["3", "Sydney1"], "must_contain_any": [["[.#Sydney1] .", "[.#Sydney1] [Sydney1#.]"]]},
    {"task": "Write a query to check if label 50534 is used in router Sydney1.", "solution": "<50534> [.#Sydney1] [Sydney1#.] <.*> 0", "other_solutions": [], "model": "Aarnet_Gen_1.json", "must_contain": ["50534", "0"], "must_not_contain": []},
    {"task": "Write a query to check if a packet arriving with the labels 1 and 11 can reach the destination router V3 while visiting at least one other router, assuming up to one link failure.", "solution": "<1 11> .+ [V3#.] <.*> 1", "other_solutions": [["<1 11> .+ [V3#.] <.+> 1", "<1 11> .+ [.#V3] <.+> 1"]], "model": "_DemoNet_.json", "must_contain": ["[V3#.]", " 1", "<1", "11", ".+"]}
]